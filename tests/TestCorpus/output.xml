<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20131028 13:01:14.808" generator="Robot 2.8.1 (Python 2.7.3 on linux2)">
<suite source="/home/jos/workspace/meTypeset/tests/TestCorpus/TestCorpusBIU.txt" id="s1" name="TestCorpusBIU">
<test id="s1-t1" name="000 Environment">
<kw type="kw" name="${result} = Process.Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>../../tools/gennlm.sh corpusItalics.docx ./000</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20131028 13:01:14.884" level="INFO">Starting process:
../../tools/gennlm.sh corpusItalics.docx ./000</msg>
<msg timestamp="20131028 13:01:14.887" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20131028 13:01:20.189" level="INFO">Process completed.</msg>
<msg timestamp="20131028 13:01:20.190" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:20.189" starttime="20131028 13:01:14.884"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20131028 13:01:20.191" level="INFO">WARNING: metadata file wasn't specified. Falling back to /home/jos/workspace/meTypeset/tools/../metadata/metadataSample.xml.
INFO: Decompressing /home/jos/workspace/meTypeset/tests/TestCorpus/000/docx/corpusItalics.docx.
Archive:  /home/jos/workspace/meTypeset/tests/TestCorpus/000/docx/corpusItalics.docx
  inflating: _rels/.rels             
  inflating: word/fontTable.xml      
  inflating: word/_rels/document.xml.rels  
  inflating: word/numbering.xml      
  inflating: word/document.xml       
  inflating: word/styles.xml         
  inflating: docProps/app.xml        
  inflating: docProps/core.xml       
  inflating: [Content_Types].xml     </msg>
<status status="PASS" endtime="20131028 13:01:20.191" starttime="20131028 13:01:20.190"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stderr}</arg>
</arguments>
<msg timestamp="20131028 13:01:20.192" level="INFO"></msg>
<status status="PASS" endtime="20131028 13:01:20.192" starttime="20131028 13:01:20.191"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Contain">
<doc>Fails if `item1` contains `item2` one or more times.</doc>
<arguments>
<arg>${result.stderr}</arg>
<arg>cannot find or open</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:20.193" starttime="20131028 13:01:20.192"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Not Contain">
<doc>Fails if `item1` contains `item2` one or more times.</doc>
<arguments>
<arg>${result.stdout}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:20.194" starttime="20131028 13:01:20.193"></status>
</kw>
<kw type="teardown" name="OperatingSystem.Remove Directory">
<doc>Removes the directory pointed to by the given `path`.</doc>
<arguments>
<arg>000</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20131028 13:01:20.195" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/jos/workspace/meTypeset/tests/TestCorpus/000"&gt;/home/jos/workspace/meTypeset/tests/TestCorpus/000&lt;/a&gt;'</msg>
<status status="PASS" endtime="20131028 13:01:20.195" starttime="20131028 13:01:20.195"></status>
</kw>
<doc></doc>
<tags>
</tags>
<status status="PASS" endtime="20131028 13:01:20.196" critical="yes" starttime="20131028 13:01:14.883"></status>
</test>
<test id="s1-t2" name="001 Matching All permutations of Italics">
<kw type="kw" name="${result} = Process.Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>../../tools/gennlm.sh corpusItalics.docx ./001</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20131028 13:01:20.198" level="INFO">Starting process:
../../tools/gennlm.sh corpusItalics.docx ./001</msg>
<msg timestamp="20131028 13:01:20.202" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20131028 13:01:25.569" level="INFO">Process completed.</msg>
<msg timestamp="20131028 13:01:25.569" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.569" starttime="20131028 13:01:20.198"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stdout}</arg>
</arguments>
<msg timestamp="20131028 13:01:25.571" level="INFO">WARNING: metadata file wasn't specified. Falling back to /home/jos/workspace/meTypeset/tools/../metadata/metadataSample.xml.
INFO: Decompressing /home/jos/workspace/meTypeset/tests/TestCorpus/001/docx/corpusItalics.docx.
Archive:  /home/jos/workspace/meTypeset/tests/TestCorpus/001/docx/corpusItalics.docx
  inflating: _rels/.rels             
  inflating: word/fontTable.xml      
  inflating: word/_rels/document.xml.rels  
  inflating: word/numbering.xml      
  inflating: word/document.xml       
  inflating: word/styles.xml         
  inflating: docProps/app.xml        
  inflating: docProps/core.xml       
  inflating: [Content_Types].xml     </msg>
<status status="PASS" endtime="20131028 13:01:25.571" starttime="20131028 13:01:25.570"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result.stderr}</arg>
</arguments>
<msg timestamp="20131028 13:01:25.572" level="INFO"></msg>
<status status="PASS" endtime="20131028 13:01:25.572" starttime="20131028 13:01:25.571"></status>
</kw>
<kw type="kw" name="${xml} = XML.Parse Xml">
<doc>Parses the given XML file or string into an element structure.</doc>
<arguments>
<arg>./001/corpusItalics.xml</arg>
</arguments>
<msg timestamp="20131028 13:01:25.574" level="INFO">${xml} = &lt;Element 'article' at 0x25fa210&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.573" starttime="20131028 13:01:25.572"></status>
</kw>
<kw type="kw" name="${sections} = XML.Get Elements">
<doc>Returns a list of elements in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${xml}</arg>
<arg>body/sec</arg>
</arguments>
<msg timestamp="20131028 13:01:25.575" level="INFO">${sections} = [&lt;Element 'sec' at 0x25fc3c0&gt;]</msg>
<status status="PASS" endtime="20131028 13:01:25.575" starttime="20131028 13:01:25.574"></status>
</kw>
<kw type="kw" name="${firstsection} = Collections.Get From List">
<doc>Returns the value specified with an `index` from `list`.</doc>
<arguments>
<arg>${sections}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20131028 13:01:25.576" level="INFO">${firstsection} = &lt;Element 'sec' at 0x25fc3c0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.576" starttime="20131028 13:01:25.575"></status>
</kw>
<kw type="kw" name="${firstParagItalicOne} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[1]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.577" level="INFO">${firstParagItalicOne} = &lt;Element 'italic' at 0x25fc510&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.577" starttime="20131028 13:01:25.576"></status>
</kw>
<kw type="kw" name="${firstParagItalicTwo} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[1]/italic[2]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.578" level="INFO">${firstParagItalicTwo} = &lt;Element 'italic' at 0x25fc570&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.578" starttime="20131028 13:01:25.578"></status>
</kw>
<kw type="kw" name="${firstParagItalicThree} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[1]/italic[3]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.580" level="INFO">${firstParagItalicThree} = &lt;Element 'italic' at 0x25fc5d0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.579" starttime="20131028 13:01:25.579"></status>
</kw>
<kw type="kw" name="${firstParagItalicFour} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[1]/italic[4]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.581" level="INFO">${firstParagItalicFour} = &lt;Element 'italic' at 0x25fc630&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.581" starttime="20131028 13:01:25.580"></status>
</kw>
<kw type="kw" name="${secondParag} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[2]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.582" level="INFO">${secondParag} = &lt;Element 'italic' at 0x25fc810&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.582" starttime="20131028 13:01:25.582"></status>
</kw>
<kw type="kw" name="${thirdParagItalicOne} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[3]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.583" level="INFO">${thirdParagItalicOne} = &lt;Element 'italic' at 0x25fc8a0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.583" starttime="20131028 13:01:25.583"></status>
</kw>
<kw type="kw" name="${thirdParagItalicTwo} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>p[3]/italic[2]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.584" level="INFO">${thirdParagItalicTwo} = &lt;Element 'italic' at 0x25fc8d0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.584" starttime="20131028 13:01:25.584"></status>
</kw>
<kw type="kw" name="${fourParagItalicOne} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>table-wrap[1]/table[1]/tr[3]/td[6]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.585" level="INFO">${fourParagItalicOne} = &lt;Element 'italic' at 0x25ff450&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.585" starttime="20131028 13:01:25.585"></status>
</kw>
<kw type="kw" name="${fourParagItalicTwo} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>table-wrap[1]/table[1]/tr[6]/td[7]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.587" level="INFO">${fourParagItalicTwo} = &lt;Element 'italic' at 0x25ff9c0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.586" starttime="20131028 13:01:25.586"></status>
</kw>
<kw type="kw" name="${fourParagItalicThree} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>table-wrap[1]/table[1]/tr[7]/td[6]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.588" level="INFO">${fourParagItalicThree} = &lt;Element 'italic' at 0x25ffba0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.588" starttime="20131028 13:01:25.587"></status>
</kw>
<kw type="kw" name="${fiveParagItalicOne} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>list[2]/list-item[2]/p[1]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.589" level="INFO">${fiveParagItalicOne} = &lt;Element 'italic' at 0x25ffde0&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.589" starttime="20131028 13:01:25.588"></status>
</kw>
<kw type="kw" name="${fiveParagItalicTwo} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>list[2]/list-item[3]/p[1]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.590" level="INFO">${fiveParagItalicTwo} = &lt;Element 'italic' at 0x25ffe70&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.590" starttime="20131028 13:01:25.589"></status>
</kw>
<kw type="kw" name="${fiveParagItalicThree} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>list[2]/list-item[4]/p[1]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.591" level="INFO">${fiveParagItalicThree} = &lt;Element 'italic' at 0x25fff00&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.591" starttime="20131028 13:01:25.590"></status>
</kw>
<kw type="kw" name="${fiveParagItalicFour} = XML.Get Element">
<doc>Returns an element in the `source` matching the `xpath`.</doc>
<arguments>
<arg>${firstsection}</arg>
<arg>list[2]/list-item[6]/p[1]/italic[1]</arg>
</arguments>
<msg timestamp="20131028 13:01:25.592" level="INFO">${fiveParagItalicFour} = &lt;Element 'italic' at 0x2604060&gt;</msg>
<status status="PASS" endtime="20131028 13:01:25.592" starttime="20131028 13:01:25.591"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${firstParagItalicOne}</arg>
<arg>&lt;italic&gt;in-vitro&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.593" starttime="20131028 13:01:25.592"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${firstParagItalicTwo}</arg>
<arg>&lt;italic&gt;in vitro.&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.594" starttime="20131028 13:01:25.594"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${firstParagItalicThree}</arg>
<arg>&lt;italic&gt;in-vitro&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.595" starttime="20131028 13:01:25.595"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${firstParagItalicFour}</arg>
<arg>&lt;italic&gt;in vivo,&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.597" starttime="20131028 13:01:25.596"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${secondParag}</arg>
<arg>&lt;italic&gt;Staphylococcus aureus&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.598" starttime="20131028 13:01:25.597"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${thirdParagItalicOne}</arg>
<arg>&lt;italic&gt;n&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.599" starttime="20131028 13:01:25.598"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${thirdParagItalicTwo}</arg>
<arg>&lt;italic&gt;Pseudomonas aeruginosa&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.600" starttime="20131028 13:01:25.599"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fourParagItalicOne}</arg>
<arg>&lt;italic&gt;p&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.601" starttime="20131028 13:01:25.600"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fourParagItalicTwo}</arg>
<arg>&lt;italic&gt;S. aureus&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.602" starttime="20131028 13:01:25.601"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fourParagItalicThree}</arg>
<arg>&lt;italic&gt;p&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.603" starttime="20131028 13:01:25.602"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fiveParagItalicOne}</arg>
<arg>&lt;italic&gt;Clinical Microbiology Reviews&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.604" starttime="20131028 13:01:25.603"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fiveParagItalicTwo}</arg>
<arg>&lt;italic&gt;Principles and Practice of Disinfection, Preservation and Sterilization, Third Edition.&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.605" starttime="20131028 13:01:25.604"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fiveParagItalicThree}</arg>
<arg>&lt;italic&gt;Dermatology&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.606" starttime="20131028 13:01:25.606"></status>
</kw>
<kw type="kw" name="XML.Elements Should Match">
<doc>Verifies that the given `source` element matches `expected`.</doc>
<arguments>
<arg>${fiveParagItalicFour}</arg>
<arg>&lt;italic&gt;Clinical Practice Guideline Number 15: Treatment of Pressure Ulcers.&lt;/italic&gt;</arg>
<arg>normalize_whitespace=yes</arg>
</arguments>
<status status="PASS" endtime="20131028 13:01:25.608" starttime="20131028 13:01:25.607"></status>
</kw>
<kw type="teardown" name="OperatingSystem.Remove Directory">
<doc>Removes the directory pointed to by the given `path`.</doc>
<arguments>
<arg>001</arg>
<arg>recursive=True</arg>
</arguments>
<msg timestamp="20131028 13:01:25.609" html="yes" level="INFO">Removed directory '&lt;a href="file:///home/jos/workspace/meTypeset/tests/TestCorpus/001"&gt;/home/jos/workspace/meTypeset/tests/TestCorpus/001&lt;/a&gt;'</msg>
<status status="PASS" endtime="20131028 13:01:25.609" starttime="20131028 13:01:25.608"></status>
</kw>
<doc></doc>
<tags>
<tag>italic</tag>
</tags>
<status status="PASS" endtime="20131028 13:01:25.609" critical="yes" starttime="20131028 13:01:20.196"></status>
</test>
<doc>This series of test cases evaluates the basic environment setup and the ability to parse basic documents.</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20131028 13:01:25.610" starttime="20131028 13:01:14.808"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
<stat info="" links="" doc="" combined="" pass="1" fail="0">italic</stat>
</tag>
<suite>
<stat fail="0" pass="2" id="s1" name="TestCorpusBIU">TestCorpusBIU</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
