*** Settings ***
Documentation     This series of test cases evaluates the sizeClassifier, section positioning and line breaks
Library           Process
Library           OperatingSystem
Library           XML
Library           Collections

*** Test Cases ***
501 Positional Stack H20 -> H19 -> H18 -> H20 -> H18 (a case that demonstrates the need for the positional stack)
    [Tags]    sectionheaders    sizeclassifier    501
    # evaluates:
    #<body>
    #<sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    <sec>
    #    <title>Heading 19</title>
    #    <p>Text under heading 19</p>
    #    <p>Line 2 under heading 19</p>
    #    <sec>
    #    <title>Heading 18</title>
    #    <p>Text under heading 18</p>
    #    <p>Line 2 under heading 18</p>
    #    </sec>
    #    </sec>
    #</sec>
    #<sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    <sec>
    #    <title>Heading 18</title>
    #    <p>Text under heading 18</p>
    #    <p>Line 2 under heading 18</p>
    #    </sec>
    #</sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec005.docx ./501 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./501/nlm/out.xml
    ${sections}=    Get Elements    ${xml}    body/sec
    ${firstsection}=    Get from list    ${sections}    0
    ${firstsectiontitle}=    Get Element    ${firstsection}    title
    ${firstsectionparagraphs}=    Get Elements    ${firstsection}    p
    ${paraone}=    Get from list    ${firstsectionparagraphs}    0
    ${paratwo}=    Get from list    ${firstsectionparagraphs}    1
    Elements Should Match    ${firstsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraone}    <p>Text under heading 20</p>
    Elements Should Match    ${paratwo}    <p>Line 2 under heading 20</p>
    ${firstsub} =    Get Elements    ${xml}    body/sec/sec
    ${firstsubsection} =    Get from list    ${firstsub}    0
    ${secondtitle}=    Get Element    ${firstsubsection}    title
    ${secondsectionparagraphs}=    Get Elements    ${firstsubsection}    p
    ${parathree}=    Get from list    ${secondsectionparagraphs}    0
    ${parafour}=    Get from list    ${secondsectionparagraphs}    1
    Elements Should Match    ${secondtitle}    <title>Heading 19</title>
    Elements Should Match    ${parathree}    <p>Text under heading 19</p>
    Elements Should Match    ${parafour}    <p>Line 2 under heading 19</p>
    ${secondsub} =    Get Elements    ${xml}    body/sec/sec/sec
    ${secondsubsection} =    Get from list    ${secondsub}    0
    ${thirdtitle}=    Get Element    ${secondsubsection}    title
    ${thirdsectionparagraphs}=    Get Elements    ${secondsubsection}    p
    ${parafive}=    Get from list    ${thirdsectionparagraphs}    0
    ${parasix}=    Get from list    ${thirdsectionparagraphs}    1
    Elements Should Match    ${thirdtitle}    <title>Heading 18</title>
    Elements Should Match    ${parafive}    <p>Text under heading 18</p>
    Elements Should Match    ${parasix}    <p>Line 2 under heading 18</p>
    ${thirdsection}=    Get from list    ${sections}    1
    ${fourthsectiontitle}=    Get Element    ${thirdsection}    title
    ${fourthsectionparagraphs}=    Get Elements    ${thirdsection}    p
    ${paraseven}=    Get from list    ${fourthsectionparagraphs}    0
    ${paraeight}=    Get from list    ${fourthsectionparagraphs}    1
    Elements Should Match    ${fourthsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraseven}    <p>Text under heading 20</p>
    Elements Should Match    ${paraeight}    <p>Line 2 under heading 20</p>
    ${thirdsubsection} =    Get from list    ${firstsub}    1
    ${fifthtitle}=    Get Element    ${thirdsubsection}    title
    ${fifthsectionparagraphs}=    Get Elements    ${thirdsubsection}    p
    ${paranine}=    Get from list    ${fifthsectionparagraphs}    0
    ${paraten}=    Get from list    ${fifthsectionparagraphs}    1
    Elements Should Match    ${fifthtitle}    <title>Heading 18</title>
    Elements Should Match    ${paranine}    <p>Text under heading 18</p>
    Elements Should Match    ${paraten}    <p>Line 2 under heading 18</p>
    [Teardown]    Remove Directory    501    recursive=True

502 Test for normalization when encountering a nested size that is greater than the root H20 -> H22
    [Tags]    sectionheaders    sizeclassifier    502
    # evaluates:
    #<body>
    #    <sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    <sec>
    #    <title>Heading 19</title>
    #    <p>Text under heading 19</p>
    #    <p>Line 2 under heading 19</p>
    #    </sec>
    #    <sec>
    #    <title>Heading 19</title>
    #    <p>Text under heading 19</p>
    #    <p>Line 2 under heading 19</p>
    #    </sec>
    #    </sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec004.docx ./502 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./502/nlm/out.xml
    ${sections}=    Get Elements    ${xml}    body/sec
    ${firstsection}=    Get from list    ${sections}    0
    ${firstsectiontitle}=    Get Element    ${firstsection}    title
    ${firstsectionparagraphs}=    Get Elements    ${firstsection}    p
    ${paraone}=    Get from list    ${firstsectionparagraphs}    0
    ${paratwo}=    Get from list    ${firstsectionparagraphs}    1
    Elements Should Match    ${firstsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraone}    <p>Text under heading 20</p>
    Elements Should Match    ${paratwo}    <p>Line 2 under heading 20</p>
    ${secondsection}=    Get from list    ${sections}    1
    ${secondsectiontitle}=    Get Element    ${secondsection}    title
    ${secondsectionparagraphs}=    Get Elements    ${secondsection}    p
    ${parathree}=    Get from list    ${secondsectionparagraphs}    0
    ${parafour}=    Get from list    ${secondsectionparagraphs}    1
    Elements Should Match    ${secondsectiontitle}    <title>Heading 22</title>
    Elements Should Match    ${parathree}    <p>Text under heading 22</p>
    Elements Should Match    ${parafour}    <p>Line 2 under heading 22</p>
    [Teardown]    Remove Directory    502    recursive=True

503 Test for paragraphs of the same size H20 -> H19 -> H19 (sibling alignment)
    [Tags]    sectionheaders    sizeclassifier    503
    # evaluates:
    #<body>
    #    <sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    </sec>
    #    <sec>
    #    <title>Heading 22</title>
    #    <p>Text under heading 22</p>
    #    <p>Line 2 under heading 22</p>
    #    </sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec003.docx ./503 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./503/nlm/out.xml
    ${sections}=    Get Elements    ${xml}    body/sec
    ${firstsection}=    Get from list    ${sections}    0
    ${firstsectiontitle}=    Get Element    ${firstsection}    title
    ${firstsectionparagraphs}=    Get Elements    ${firstsection}    p
    ${paraone}=    Get from list    ${firstsectionparagraphs}    0
    ${paratwo}=    Get from list    ${firstsectionparagraphs}    1
    Elements Should Match    ${firstsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraone}    <p>Text under heading 20</p>
    Elements Should Match    ${paratwo}    <p>Line 2 under heading 20</p>
    ${firstsub} =    Get Elements    ${xml}    body/sec/sec
    ${firstsubsection} =    Get from list    ${firstsub}    0
    ${secondtitle}=    Get Element    ${firstsubsection}    title
    ${secondsectionparagraphs}=    Get Elements    ${firstsubsection}    p
    ${parathree}=    Get from list    ${secondsectionparagraphs}    0
    ${parafour}=    Get from list    ${secondsectionparagraphs}    1
    Elements Should Match    ${secondtitle}    <title>Heading 19</title>
    Elements Should Match    ${parathree}    <p>Text under heading 19</p>
    Elements Should Match    ${parafour}    <p>Line 2 under heading 19</p>
    ${secondsubsection} =    Get from list    ${firstsub}    0
    ${thirdtitle}=    Get Element    ${secondsubsection}    title
    ${thirdsectionparagraphs}=    Get Elements    ${secondsubsection}    p
    ${parafive}=    Get from list    ${thirdsectionparagraphs}    0
    ${parasix}=    Get from list    ${thirdsectionparagraphs}    1
    Elements Should Match    ${thirdtitle}    <title>Heading 19</title>
    Elements Should Match    ${parafive}    <p>Text under heading 19</p>
    Elements Should Match    ${parasix}    <p>Line 2 under heading 19</p>
    [Teardown]    Remove Directory    503    recursive=True

504 Test for increased size within subsection H20 -> H19 -> H18 -> H19 (sibling alignment)
    [Tags]    sectionheaders    sizeclassifier    504
    # evaluates:
    #<body>
    #    <sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    <sec>
    #    <title>Heading 19</title>
    #    <p>Text under heading 19</p>
    #    <p>Line 2 under heading 19</p>
    #    <sec>
    #    <title>Heading 18</title>
    #    <p>Text under heading 18</p>
    #    <p>Line 2 under heading 18</p>
    #    </sec>
    #    <sec>
    #    <title>Heading 19 #2</title>
    #    <p>Text under heading 19 #2</p>
    #    <p>Line 2 under heading 19 #2</p>
    #    </sec>
    #    </sec>
    #    </sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec002.docx ./504 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./504/nlm/out.xml
    ${sections}=    Get Elements    ${xml}    body/sec
    ${firstsection}=    Get from list    ${sections}    0
    ${firstsectiontitle}=    Get Element    ${firstsection}    title
    ${firstsectionparagraphs}=    Get Elements    ${firstsection}    p
    ${paraone}=    Get from list    ${firstsectionparagraphs}    0
    ${paratwo}=    Get from list    ${firstsectionparagraphs}    1
    Elements Should Match    ${firstsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraone}    <p>Text under heading 20</p>
    Elements Should Match    ${paratwo}    <p>Line 2 under heading 20</p>
    ${firstsub} =    Get Elements    ${xml}    body/sec/sec
    ${firstsubsection} =    Get from list    ${firstsub}    0
    ${secondtitle}=    Get Element    ${firstsubsection}    title
    ${secondsectionparagraphs}=    Get Elements    ${firstsubsection}    p
    ${parathree}=    Get from list    ${secondsectionparagraphs}    0
    ${parafour}=    Get from list    ${secondsectionparagraphs}    1
    Elements Should Match    ${secondtitle}    <title>Heading 19</title>
    Elements Should Match    ${parathree}    <p>Text under heading 19</p>
    Elements Should Match    ${parafour}    <p>Line 2 under heading 19</p>
    ${secondsub} =    Get Elements    ${xml}    body/sec/sec/sec
    ${secondsubsection} =    Get from list    ${secondsub}    0
    ${thirdtitle}=    Get Element    ${secondsubsection}    title
    ${thirdsectionparagraphs}=    Get Elements    ${secondsubsection}    p
    ${parafive}=    Get from list    ${thirdsectionparagraphs}    0
    ${parasix}=    Get from list    ${thirdsectionparagraphs}    1
    Elements Should Match    ${thirdtitle}    <title>Heading 18</title>
    Elements Should Match    ${parafive}    <p>Text under heading 18</p>
    Elements Should Match    ${parasix}    <p>Line 2 under heading 18</p>
    ${secondsubsection} =    Get from list    ${firstsub}    1
    ${thirdtitle}=    Get Element    ${secondsubsection}    title
    ${thirdsectionparagraphs}=    Get Elements    ${secondsubsection}    p
    ${parafive}=    Get from list    ${thirdsectionparagraphs}    0
    ${parasix}=    Get from list    ${thirdsectionparagraphs}    1
    Elements Should Match    ${thirdtitle}    <title>Heading 19 #2</title>
    Elements Should Match    ${parafive}    <p>Text under heading 19 #2</p>
    Elements Should Match    ${parasix}    <p>Line 2 under heading 19 #2</p>
    [Teardown]    Remove Directory    504    recursive=True

505 Basic descension test H20 -> H19 -> H18
    [Tags]    sectionheaders    sizeclassifier    505
    # evaluates:
    #<body>
    #    <sec>
    #    <title>Heading 20</title>
    #    <p>Text under heading 20</p>
    #    <p>Line 2 under heading 20</p>
    #    <sec>
    #    <title>Heading 19</title>
    #    <p>Text under heading 19</p>
    #    <p>Line 2 under heading 19</p>
    #    <sec>
    #    <title>Heading 18</title>
    #    <p>Text under heading 18</p>
    #    <p>Line 2 under heading 18</p>
    #    </sec>
    #    </sec>
    #    </sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec001.docx ./505 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./505/nlm/out.xml
    ${sections}=    Get Elements    ${xml}    body/sec
    ${firstsection}=    Get from list    ${sections}    0
    ${firstsectiontitle}=    Get Element    ${firstsection}    title
    ${firstsectionparagraphs}=    Get Elements    ${firstsection}    p
    ${paraone}=    Get from list    ${firstsectionparagraphs}    0
    ${paratwo}=    Get from list    ${firstsectionparagraphs}    1
    Elements Should Match    ${firstsectiontitle}    <title>Heading 20</title>
    Elements Should Match    ${paraone}    <p>Text under heading 20</p>
    Elements Should Match    ${paratwo}    <p>Line 2 under heading 20</p>
    ${firstsub} =    Get Elements    ${xml}    body/sec/sec
    ${firstsubsection} =    Get from list    ${firstsub}    0
    ${secondtitle}=    Get Element    ${firstsubsection}    title
    ${secondsectionparagraphs}=    Get Elements    ${firstsubsection}    p
    ${parathree}=    Get from list    ${secondsectionparagraphs}    0
    ${parafour}=    Get from list    ${secondsectionparagraphs}    1
    Elements Should Match    ${secondtitle}    <title>Heading 19</title>
    Elements Should Match    ${parathree}    <p>Text under heading 19</p>
    Elements Should Match    ${parafour}    <p>Line 2 under heading 19</p>
    ${secondsub} =    Get Elements    ${xml}    body/sec/sec/sec
    ${secondsubsection} =    Get from list    ${secondsub}    0
    ${thirdtitle}=    Get Element    ${secondsubsection}    title
    ${thirdsectionparagraphs}=    Get Elements    ${secondsubsection}    p
    ${parafive}=    Get from list    ${thirdsectionparagraphs}    0
    ${parasix}=    Get from list    ${thirdsectionparagraphs}    1
    Elements Should Match    ${thirdtitle}    <title>Heading 18</title>
    Elements Should Match    ${parafive}    <p>Text under heading 18</p>
    Elements Should Match    ${parasix}    <p>Line 2 under heading 18</p>
    [Teardown]    Remove Directory    505    recursive=True

506 Mixed bold and sizes. Wrongly ordered size handling.
    [Tags]    sectionheaders    sizeclassifier    506
    # evaluates:
    #<body>
    #    <sec>
    #    <title>Heading 1</title>
    #    <sec>
    #    <title>Heading 2</title>
    #    </sec>
    #    </sec>
    #    <sec>
    #    <title>Just bold text that should be heading 1</title>
    #    <sec>
    #    <title>Heading 3</title>
    #    </sec>
    #    <sec>
    #    <title>Misplaced Heading 2</title>
    #    </sec>
    #    </sec>
    #</body>
    ${result} =    Run Process    python ../bin/meTypeset.py docx Sec006.docx ./506 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./506/nlm/out.xml
    ${body}=    Get Element    ${xml}    body
    Elements Should Match    ${body}    <body><sec><title>Heading 1</title><sec><title>Heading 2</title></sec></sec><sec><title>Just bold text that should be heading 1</title><sec><title>Heading 3</title></sec><sec><title>Misplaced Heading 2</title></sec></sec></body>    normalize_whitespace=yes
    [Teardown]    Remove Directory    506    recursive=True

507 Properly styled word headings
    [Tags]    sectionheaders    sizeclassifier    507
    ${result} =    Run Process    python ../bin/meTypeset.py docx StyledHeadings1.docx ./507 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./507/nlm/out.xml
    ${body}=    Get Element    ${xml}    body
    Elements Should Match    ${body}    <body><sec><title>Heading 1</title><p>A paragraph</p><sec><title>Heading 2</title><p>A second paragraph</p></sec></sec><sec><title>Heading 1 Again</title><p>Third paragraph</p></sec></body>    normalize_whitespace=yes
    [Teardown]    Remove Directory    507    recursive=True

508 Root size lower than cutoff size
    [Tags]    sectionheaders    sizeclassifier    508
    ${result} =    Run Process    python ../bin/meTypeset.py docx 508.docx ./508 -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./508/nlm/out.xml
    ${body}=    Get Element    ${xml}    body
    Elements Should Match    ${body}    <body><sec><title>A heading below the size cutoff</title></sec><sec><title>A heading that is larger than the root</title></sec></body>    normalize_whitespace=yes
    [Teardown]    Remove Directory    508    recursive=True

556 Test line breaks
    [Tags]    linebreaks    556    formatting
    ${result} =    Run Process    python ../bin/meTypeset.py docx LineBreak.docx ./556 -s ./linebreakson.xml -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./556/nlm/out.xml
    ${paragraph}=    Get Elements    ${xml}    body/sec/p
    ${paraone}=    Get from list    ${paragraph}    0
    ${paratwo}=    Get from list    ${paragraph}    1
    ${parathree}=    Get from list    ${paragraph}    2
    ${parafour}=    Get from list    ${paragraph}    3
    ${parafive}=    Get from list    ${paragraph}    4
    Elements Should Match    ${paraone}    <p>A <bold>bold text</bold> paragraph</p>    normalize_whitespace=yes
    Elements Should Match    ${paratwo}    <p>A line break <bold>with more</bold><italic>italic</italic> test</p>    normalize_whitespace=yes
    Elements Should Match    ${parathree}    <p>A second <italic>break</italic></p>    normalize_whitespace=yes
    Elements Should Match    ${parafour}    <p><italic>A third break</italic> where italic breaks across the line</p>    normalize_whitespace=yes
    Elements Should Match    ${parafive}    <p>A second paragraph</p>    normalize_whitespace=yes
    [Teardown]    Remove Directory    556    recursive=True

557 Test line breaks off
    [Tags]    linebreaks    557    formatting
    ${result} =    Run Process    python ../bin/meTypeset.py docx LineBreak.docx ./557 -s ./linebreaksoff.xml -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./557/nlm/out.xml
    ${paragraph}=    Get Elements    ${xml}    body/sec/p
    ${paraone}=    Get from list    ${paragraph}    0
    ${paratwo}=    Get from list    ${paragraph}    1
    Elements Should Match    ${paraone}    <p>A <bold>bold text</bold> paragraph<!--meTypeset:br-->A line break <bold>with more</bold><italic>italic</italic> test<!--meTypeset:br-->A second <italic>break<!--meTypeset:br-->A third break</italic> where italic breaks across the line</p>    normalize_whitespace=yes
    Elements Should Match    ${paratwo}    <p>A second paragraph</p>    normalize_whitespace=yes
    [Teardown]    Remove Directory    557    recursive=True

558 Test line breaks in table: this does a genuine break replacement even when turned off
    [Tags]    linebreaks    558    formatting
    ${result} =    Run Process    python ../bin/meTypeset.py docx LineBreaksInTable.docx ./558 -s ./linebreaksoff.xml -d    shell=True
    Log    ${result.stdout}
    Log    ${result.stderr}
    ${xml}=    Parse XML    ./558/nlm/out.xml
    ${p}=    Get Element    ${xml}    body/sec/table-wrap/table/tr/td
    Elements Should Match    ${p}    <td rowspan="1" colspan="1">Line 1<break/>Line 2</td>
    [Teardown]    Remove Directory    558    recursive=True
